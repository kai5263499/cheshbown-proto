// Code generated by protoc-gen-go.
// source: credit.proto
// DO NOT EDIT!

/*
Package cheshbown is a generated protocol buffer package.

It is generated from these files:
	credit.proto

It has these top-level messages:
	Base
	Work
*/
package cheshbown

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_WORK             MessageType = 0
	MessageType_PING             MessageType = 1
	MessageType_CONNECT          MessageType = 2
	MessageType_DISCONNECT       MessageType = 3
	MessageType_SHUTDOWN         MessageType = 4
	MessageType_SHUTTINGDOWN     MessageType = 5
	MessageType_SHUTDOWNCOMPLETE MessageType = 6
	MessageType_ACK              MessageType = 7
	MessageType_NACK             MessageType = 8
)

var MessageType_name = map[int32]string{
	0: "WORK",
	1: "PING",
	2: "CONNECT",
	3: "DISCONNECT",
	4: "SHUTDOWN",
	5: "SHUTTINGDOWN",
	6: "SHUTDOWNCOMPLETE",
	7: "ACK",
	8: "NACK",
}
var MessageType_value = map[string]int32{
	"WORK":             0,
	"PING":             1,
	"CONNECT":          2,
	"DISCONNECT":       3,
	"SHUTDOWN":         4,
	"SHUTTINGDOWN":     5,
	"SHUTDOWNCOMPLETE": 6,
	"ACK":              7,
	"NACK":             8,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NodeType int32

const (
	NodeType_GranterSupervisor  NodeType = 0
	NodeType_Granter            NodeType = 1
	NodeType_BorrowerSupervisor NodeType = 2
	NodeType_Borrower           NodeType = 3
)

var NodeType_name = map[int32]string{
	0: "GranterSupervisor",
	1: "Granter",
	2: "BorrowerSupervisor",
	3: "Borrower",
}
var NodeType_value = map[string]int32{
	"GranterSupervisor":  0,
	"Granter":            1,
	"BorrowerSupervisor": 2,
	"Borrower":           3,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Base struct {
	Sender      []byte      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Timestamp   int64       `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	NodeType    NodeType    `protobuf:"varint,3,opt,name=node_type,json=nodeType,enum=cheshbown.NodeType" json:"node_type,omitempty"`
	MessageType MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,enum=cheshbown.MessageType" json:"message_type,omitempty"`
	Work        []*Work     `protobuf:"bytes,5,rep,name=work" json:"work,omitempty"`
}

func (m *Base) Reset()                    { *m = Base{} }
func (m *Base) String() string            { return proto.CompactTextString(m) }
func (*Base) ProtoMessage()               {}
func (*Base) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Base) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Base) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Base) GetNodeType() NodeType {
	if m != nil {
		return m.NodeType
	}
	return NodeType_GranterSupervisor
}

func (m *Base) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_WORK
}

func (m *Base) GetWork() []*Work {
	if m != nil {
		return m.Work
	}
	return nil
}

type Work struct {
	Id      []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Retries int32  `protobuf:"varint,3,opt,name=retries" json:"retries,omitempty"`
}

func (m *Work) Reset()                    { *m = Work{} }
func (m *Work) String() string            { return proto.CompactTextString(m) }
func (*Work) ProtoMessage()               {}
func (*Work) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Work) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Work) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Work) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func init() {
	proto.RegisterType((*Base)(nil), "cheshbown.Base")
	proto.RegisterType((*Work)(nil), "cheshbown.Work")
	proto.RegisterEnum("cheshbown.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("cheshbown.NodeType", NodeType_name, NodeType_value)
}

func init() { proto.RegisterFile("credit.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x41, 0x6f, 0x9b, 0x40,
	0x10, 0x85, 0xb3, 0x80, 0x0d, 0x1e, 0x90, 0xbb, 0x9d, 0xb6, 0x16, 0x87, 0x1e, 0x50, 0x7a, 0x41,
	0x39, 0x58, 0x55, 0x7a, 0xea, 0xb1, 0x21, 0x96, 0xeb, 0xa6, 0x81, 0x08, 0x53, 0xf9, 0x58, 0x11,
	0x33, 0x6a, 0x50, 0x04, 0x8b, 0x76, 0xb7, 0xb5, 0xf2, 0x0b, 0xfa, 0xef, 0xfa, 0x9b, 0xaa, 0xa5,
	0x50, 0x3b, 0xb7, 0xf9, 0xde, 0xe3, 0xb1, 0xf3, 0x56, 0x0b, 0xc1, 0x5e, 0x52, 0x55, 0xeb, 0x65,
	0x27, 0x85, 0x16, 0x38, 0xdb, 0x3f, 0x90, 0x7a, 0xb8, 0x17, 0x87, 0xf6, 0xfc, 0x0f, 0x03, 0xe7,
	0xaa, 0x54, 0x84, 0x0b, 0x98, 0x2a, 0x6a, 0x2b, 0x92, 0x21, 0x8b, 0x58, 0x1c, 0xe4, 0x03, 0xe1,
	0x5b, 0x98, 0xe9, 0xba, 0x21, 0xa5, 0xcb, 0xa6, 0x0b, 0xad, 0x88, 0xc5, 0x76, 0x7e, 0x14, 0xf0,
	0x3d, 0xcc, 0x5a, 0x51, 0xd1, 0x77, 0xfd, 0xd4, 0x51, 0x68, 0x47, 0x2c, 0x9e, 0x5f, 0xbe, 0x5a,
	0xfe, 0xff, 0xfb, 0x32, 0x15, 0x15, 0x15, 0x4f, 0x1d, 0xe5, 0x5e, 0x3b, 0x4c, 0xf8, 0x11, 0x82,
	0x86, 0x94, 0x2a, 0x7f, 0x0c, 0x21, 0xa7, 0x0f, 0x2d, 0x4e, 0x42, 0xb7, 0xff, 0xec, 0x3e, 0xe7,
	0x37, 0x47, 0xc0, 0x77, 0xe0, 0x1c, 0x84, 0x7c, 0x0c, 0x27, 0x91, 0x1d, 0xfb, 0x97, 0x2f, 0x4e,
	0x22, 0x3b, 0x21, 0x1f, 0xf3, 0xde, 0x3c, 0xff, 0x02, 0x8e, 0x21, 0x9c, 0x83, 0x55, 0x57, 0x43,
	0x17, 0xab, 0xae, 0x30, 0x04, 0x77, 0x2f, 0xa9, 0xd4, 0x54, 0x0d, 0x2d, 0x46, 0x34, 0x8e, 0x24,
	0x2d, 0x6b, 0x52, 0x7d, 0x83, 0x49, 0x3e, 0xe2, 0xc5, 0x6f, 0x06, 0xfe, 0xc9, 0x36, 0xe8, 0x81,
	0xb3, 0xcb, 0xf2, 0x1b, 0x7e, 0x66, 0xa6, 0xbb, 0x4d, 0xba, 0xe6, 0x0c, 0x7d, 0x70, 0x93, 0x2c,
	0x4d, 0x57, 0x49, 0xc1, 0x2d, 0x9c, 0x03, 0x5c, 0x6f, 0xb6, 0x23, 0xdb, 0x18, 0x80, 0xb7, 0xfd,
	0xfc, 0xad, 0xb8, 0xce, 0x76, 0x29, 0x77, 0x90, 0x43, 0x60, 0xa8, 0xd8, 0xa4, 0xeb, 0x5e, 0x99,
	0xe0, 0x6b, 0xe0, 0xa3, 0x9f, 0x64, 0xb7, 0x77, 0x5f, 0x57, 0xc5, 0x8a, 0x4f, 0xd1, 0x05, 0xfb,
	0x53, 0x72, 0xc3, 0x5d, 0x73, 0x4a, 0x6a, 0x26, 0xef, 0xa2, 0x00, 0x6f, 0xbc, 0x4b, 0x7c, 0x03,
	0x2f, 0xd7, 0xb2, 0x6c, 0x35, 0xc9, 0xed, 0xcf, 0x8e, 0xe4, 0xaf, 0x5a, 0x09, 0xc9, 0xcf, 0xcc,
	0x22, 0x83, 0xcc, 0x19, 0x2e, 0x00, 0xaf, 0x84, 0x94, 0xe2, 0xf0, 0xec, 0x23, 0xcb, 0x2c, 0x34,
	0xea, 0xdc, 0xbe, 0x9f, 0xf6, 0xcf, 0xe1, 0xc3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xae,
	0xdf, 0x9d, 0x1e, 0x02, 0x00, 0x00,
}

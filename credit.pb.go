// Code generated by protoc-gen-gogo.
// source: credit.proto
// DO NOT EDIT!

/*
Package cheshbown_proto is a generated protocol buffer package.

It is generated from these files:
	credit.proto

It has these top-level messages:
	Base
	Work
	Worker
	Gossip
*/
package cheshbown_proto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_WORK       MessageType = 0
	MessageType_DISCONNECT MessageType = 1
	MessageType_SHUTDOWN   MessageType = 2
	MessageType_RESULT     MessageType = 3
	MessageType_GOSSIP     MessageType = 4
)

var MessageType_name = map[int32]string{
	0: "WORK",
	1: "DISCONNECT",
	2: "SHUTDOWN",
	3: "RESULT",
	4: "GOSSIP",
}
var MessageType_value = map[string]int32{
	"WORK":       0,
	"DISCONNECT": 1,
	"SHUTDOWN":   2,
	"RESULT":     3,
	"GOSSIP":     4,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptorCredit, []int{0} }

type Result int32

const (
	Result_ACK  Result = 0
	Result_NACK Result = 1
)

var Result_name = map[int32]string{
	0: "ACK",
	1: "NACK",
}
var Result_value = map[string]int32{
	"ACK":  0,
	"NACK": 1,
}

func (x Result) String() string {
	return proto.EnumName(Result_name, int32(x))
}
func (Result) EnumDescriptor() ([]byte, []int) { return fileDescriptorCredit, []int{1} }

type NodeType int32

const (
	NodeType_Distributor        NodeType = 0
	NodeType_LenderSupervisor   NodeType = 1
	NodeType_Lender             NodeType = 2
	NodeType_BorrowerSupervisor NodeType = 3
	NodeType_Borrower           NodeType = 4
)

var NodeType_name = map[int32]string{
	0: "Distributor",
	1: "LenderSupervisor",
	2: "Lender",
	3: "BorrowerSupervisor",
	4: "Borrower",
}
var NodeType_value = map[string]int32{
	"Distributor":        0,
	"LenderSupervisor":   1,
	"Lender":             2,
	"BorrowerSupervisor": 3,
	"Borrower":           4,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptorCredit, []int{2} }

type NodeStatus int32

const (
	NodeStatus_ACTIVE           NodeStatus = 0
	NodeStatus_SHUTTINGDOWN     NodeStatus = 1
	NodeStatus_SHUTDOWNCOMPLETE NodeStatus = 2
)

var NodeStatus_name = map[int32]string{
	0: "ACTIVE",
	1: "SHUTTINGDOWN",
	2: "SHUTDOWNCOMPLETE",
}
var NodeStatus_value = map[string]int32{
	"ACTIVE":           0,
	"SHUTTINGDOWN":     1,
	"SHUTDOWNCOMPLETE": 2,
}

func (x NodeStatus) String() string {
	return proto.EnumName(NodeStatus_name, int32(x))
}
func (NodeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorCredit, []int{3} }

type Base struct {
	Sender      []byte      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Timestamp   int64       `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeType    NodeType    `protobuf:"varint,3,opt,name=node_type,json=nodeType,proto3,enum=cheshbown.proto.NodeType" json:"node_type,omitempty"`
	MessageType MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=cheshbown.proto.MessageType" json:"message_type,omitempty"`
	Work        []*Work     `protobuf:"bytes,5,rep,name=work" json:"work,omitempty"`
	Gossip      *Gossip     `protobuf:"bytes,6,opt,name=gossip" json:"gossip,omitempty"`
}

func (m *Base) Reset()                    { *m = Base{} }
func (m *Base) String() string            { return proto.CompactTextString(m) }
func (*Base) ProtoMessage()               {}
func (*Base) Descriptor() ([]byte, []int) { return fileDescriptorCredit, []int{0} }

func (m *Base) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Base) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Base) GetNodeType() NodeType {
	if m != nil {
		return m.NodeType
	}
	return NodeType_Distributor
}

func (m *Base) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_WORK
}

func (m *Base) GetWork() []*Work {
	if m != nil {
		return m.Work
	}
	return nil
}

func (m *Base) GetGossip() *Gossip {
	if m != nil {
		return m.Gossip
	}
	return nil
}

type Work struct {
	Id           []byte    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created      int64     `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Retries      int32     `protobuf:"varint,3,opt,name=retries,proto3" json:"retries,omitempty"`
	Result       Result    `protobuf:"varint,4,opt,name=result,proto3,enum=cheshbown.proto.Result" json:"result,omitempty"`
	Data         []byte    `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	WorkersTried []*Worker `protobuf:"bytes,6,rep,name=workers_tried,json=workersTried" json:"workers_tried,omitempty"`
}

func (m *Work) Reset()                    { *m = Work{} }
func (m *Work) String() string            { return proto.CompactTextString(m) }
func (*Work) ProtoMessage()               {}
func (*Work) Descriptor() ([]byte, []int) { return fileDescriptorCredit, []int{1} }

func (m *Work) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Work) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Work) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *Work) GetResult() Result {
	if m != nil {
		return m.Result
	}
	return Result_ACK
}

func (m *Work) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Work) GetWorkersTried() []*Worker {
	if m != nil {
		return m.WorkersTried
	}
	return nil
}

type Worker struct {
	Id       []byte     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeType NodeType   `protobuf:"varint,2,opt,name=node_type,json=nodeType,proto3,enum=cheshbown.proto.NodeType" json:"node_type,omitempty"`
	LastSeen int64      `protobuf:"varint,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Status   NodeStatus `protobuf:"varint,4,opt,name=status,proto3,enum=cheshbown.proto.NodeStatus" json:"status,omitempty"`
}

func (m *Worker) Reset()                    { *m = Worker{} }
func (m *Worker) String() string            { return proto.CompactTextString(m) }
func (*Worker) ProtoMessage()               {}
func (*Worker) Descriptor() ([]byte, []int) { return fileDescriptorCredit, []int{2} }

func (m *Worker) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Worker) GetNodeType() NodeType {
	if m != nil {
		return m.NodeType
	}
	return NodeType_Distributor
}

func (m *Worker) GetLastSeen() int64 {
	if m != nil {
		return m.LastSeen
	}
	return 0
}

func (m *Worker) GetStatus() NodeStatus {
	if m != nil {
		return m.Status
	}
	return NodeStatus_ACTIVE
}

type Gossip struct {
	Timestamp int64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Workers   []*Worker `protobuf:"bytes,2,rep,name=workers" json:"workers,omitempty"`
}

func (m *Gossip) Reset()                    { *m = Gossip{} }
func (m *Gossip) String() string            { return proto.CompactTextString(m) }
func (*Gossip) ProtoMessage()               {}
func (*Gossip) Descriptor() ([]byte, []int) { return fileDescriptorCredit, []int{3} }

func (m *Gossip) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Gossip) GetWorkers() []*Worker {
	if m != nil {
		return m.Workers
	}
	return nil
}

func init() {
	proto.RegisterType((*Base)(nil), "cheshbown.proto.Base")
	proto.RegisterType((*Work)(nil), "cheshbown.proto.Work")
	proto.RegisterType((*Worker)(nil), "cheshbown.proto.Worker")
	proto.RegisterType((*Gossip)(nil), "cheshbown.proto.Gossip")
	proto.RegisterEnum("cheshbown.proto.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("cheshbown.proto.Result", Result_name, Result_value)
	proto.RegisterEnum("cheshbown.proto.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("cheshbown.proto.NodeStatus", NodeStatus_name, NodeStatus_value)
}

func init() { proto.RegisterFile("credit.proto", fileDescriptorCredit) }

var fileDescriptorCredit = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0xfc, 0x53, 0x37, 0xbd, 0xf1, 0xd7, 0x5a, 0x23, 0x28, 0x46, 0xed, 0xa2, 0xca, 0xaa,
	0x74, 0x11, 0x44, 0x2a, 0xb1, 0x42, 0x82, 0x36, 0x89, 0x42, 0x44, 0xe2, 0x54, 0x63, 0x97, 0x88,
	0x55, 0xe4, 0xc4, 0xa3, 0xd6, 0xa2, 0x89, 0xa3, 0x99, 0x09, 0x11, 0x8f, 0xc1, 0x2b, 0xf0, 0x3e,
	0xbc, 0x13, 0x77, 0xc6, 0x63, 0x85, 0x34, 0x15, 0x62, 0x77, 0x7f, 0xce, 0xbd, 0xc7, 0xe7, 0xdc,
	0x31, 0xf8, 0x33, 0xce, 0xb2, 0x5c, 0x36, 0x97, 0xbc, 0x90, 0x05, 0x39, 0x9a, 0xdd, 0x33, 0x71,
	0x3f, 0x2d, 0xd6, 0x8b, 0xb2, 0xd0, 0xf8, 0x61, 0x83, 0x7b, 0x9d, 0x0a, 0x46, 0x8e, 0xc1, 0x13,
	0x6c, 0x91, 0x31, 0x1e, 0x5a, 0x67, 0xd6, 0xb9, 0x4f, 0x4d, 0x46, 0x4e, 0xe1, 0x40, 0xe6, 0x73,
	0x26, 0x64, 0x3a, 0x5f, 0x86, 0x36, 0xb6, 0x1c, 0xba, 0x29, 0x90, 0xb7, 0x70, 0xb0, 0x28, 0x32,
	0x36, 0x91, 0xdf, 0x97, 0x2c, 0x74, 0xb0, 0x7b, 0xd8, 0x7a, 0xd9, 0x7c, 0xc4, 0xd1, 0x8c, 0x10,
	0x91, 0x20, 0x80, 0xd6, 0x16, 0x26, 0x22, 0xef, 0xc1, 0xc7, 0x15, 0x22, 0xbd, 0x33, 0xa3, 0xae,
	0x1e, 0x3d, 0xdd, 0x19, 0x1d, 0x96, 0x20, 0x3d, 0x5d, 0x9f, 0x6f, 0x12, 0xf2, 0x0a, 0xdc, 0x75,
	0xc1, 0xbf, 0x86, 0x7b, 0x67, 0xce, 0x79, 0xbd, 0xf5, 0x7c, 0x67, 0x70, 0x8c, 0x4d, 0xaa, 0x21,
	0xe4, 0x35, 0x78, 0x77, 0x85, 0x10, 0xf9, 0x32, 0xf4, 0x90, 0xa5, 0xde, 0x7a, 0xb1, 0x03, 0xee,
	0xe9, 0x36, 0x35, 0xb0, 0xc6, 0x2f, 0x0b, 0x5c, 0x35, 0x4f, 0x0e, 0xc1, 0xce, 0x33, 0xe3, 0x07,
	0x46, 0x24, 0x84, 0x7d, 0x74, 0x33, 0x95, 0x2c, 0x33, 0x4e, 0x54, 0xa9, 0xea, 0x70, 0x26, 0x79,
	0xce, 0x84, 0x76, 0x61, 0x8f, 0x56, 0xa9, 0x62, 0xe7, 0x4c, 0xac, 0x1e, 0xa4, 0xd1, 0xb8, 0xcb,
	0x4e, 0x75, 0x9b, 0x1a, 0x18, 0x21, 0xe0, 0x66, 0xa9, 0x4c, 0x51, 0x99, 0xa2, 0xd5, 0x31, 0x79,
	0x07, 0xff, 0x2b, 0x29, 0x8c, 0x8b, 0x89, 0xda, 0x9a, 0xa1, 0x12, 0xe7, 0x49, 0x25, 0x63, 0x8d,
	0xa2, 0xbe, 0x41, 0x27, 0x0a, 0xdc, 0xf8, 0x69, 0x81, 0x57, 0x36, 0x76, 0x14, 0x6d, 0xdd, 0xcf,
	0xfe, 0xf7, 0xfb, 0x9d, 0xc0, 0xc1, 0x43, 0x2a, 0xe4, 0x44, 0x30, 0xb6, 0xd0, 0x8a, 0x1d, 0x5a,
	0x53, 0x85, 0x18, 0x73, 0x72, 0x89, 0x4f, 0x49, 0xa6, 0x72, 0x25, 0x8c, 0xe4, 0x93, 0x27, 0x37,
	0xc6, 0x1a, 0x42, 0x0d, 0xb4, 0xf1, 0x05, 0xbc, 0xf2, 0x0c, 0xdb, 0x2f, 0xce, 0x7a, 0xfc, 0xe2,
	0xde, 0xc0, 0xbe, 0x11, 0x87, 0xdf, 0xfb, 0x57, 0x13, 0x2a, 0xdc, 0xc5, 0x10, 0xea, 0x7f, 0xbc,
	0x23, 0x52, 0xc3, 0xeb, 0x8e, 0xe8, 0xa7, 0xe0, 0x3f, 0x74, 0x03, 0x3a, 0xfd, 0xb8, 0x3d, 0x8a,
	0xa2, 0x6e, 0x3b, 0x09, 0x2c, 0xe2, 0x43, 0x2d, 0xfe, 0x78, 0x9b, 0x74, 0x46, 0xe3, 0x28, 0xb0,
	0x09, 0x80, 0x47, 0xbb, 0xf1, 0xed, 0x20, 0x09, 0x1c, 0x15, 0xf7, 0x46, 0x71, 0xdc, 0xbf, 0x09,
	0xdc, 0x8b, 0x13, 0xac, 0x97, 0xa7, 0xda, 0x07, 0xe7, 0xaa, 0xad, 0x16, 0xe1, 0xca, 0x48, 0x45,
	0xd6, 0xc5, 0x0c, 0x6a, 0x95, 0x5d, 0xe4, 0x08, 0xea, 0x9d, 0x5c, 0xe0, 0xc1, 0xa6, 0x2b, 0x59,
	0x70, 0x84, 0x3d, 0x83, 0x60, 0xa0, 0xff, 0xaa, 0x78, 0xb5, 0x64, 0xfc, 0x5b, 0x2e, 0xb0, 0x6a,
	0xa9, 0xdd, 0x65, 0x15, 0x39, 0x8f, 0x81, 0x5c, 0x17, 0x9c, 0x17, 0xeb, 0x2d, 0x8c, 0xa3, 0xbe,
	0xac, 0xaa, 0xe3, 0x17, 0x7c, 0x00, 0xd8, 0x38, 0xa8, 0xe6, 0xaf, 0xda, 0x49, 0xff, 0x73, 0x17,
	0x19, 0x02, 0xf0, 0x95, 0x82, 0xa4, 0x1f, 0xf5, 0xb4, 0x0a, 0x4b, 0x71, 0x56, 0x9a, 0xda, 0xa3,
	0xe1, 0xcd, 0xa0, 0x9b, 0x74, 0x03, 0x7b, 0xea, 0x69, 0xa7, 0x2e, 0x7f, 0x07, 0x00, 0x00, 0xff,
	0xff, 0xf0, 0x92, 0xd8, 0x4b, 0x1e, 0x04, 0x00, 0x00,
}
